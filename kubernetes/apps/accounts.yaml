---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-service
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: account-service
  template:
    metadata:
      labels:
        app: account-service
        redis-client: "true"
    spec:
      containers:
        - name: account-service
          image: docker.io/dhubau/account-service:latest
          imagePullPolicy: Always
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SPRING_REDIS_HOST
              value: redis-master
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
            - name: SPRING_RABBITMQ_HOST
              value: rabbitmq
            - name: SPRING_RABBITMQ_USERNAME
              value: user
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq
                  key: rabbitmq-password
            - name: PAYMENTS_HOST
              value: payment-service
            - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_ENABLED
              value: 'true'
            - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_URI
              value: 'proxy://wavefront-proxy:2878'
            - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: wavefront
                  key: token
            - name: SPRING_ZIPKIN_ENABLED
              value: 'true'
            - name: SPRING_ZIPKIN_BASE_URL
              value: 'http://wavefront-proxy:9411'
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 3
            httpGet:
              path: /actuator/info
              port: 8080
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            httpGet:
              path: /actuator/health
              port: 8080
          resources:
            requests:
              memory: 1024Mi
              cpu: 500m
            limits:
              memory: 1024Mi
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: account-service
  labels:
    app: account-service
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: account-service